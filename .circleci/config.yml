---
# Modified by SignalFx
version: 2.1

references:
  goexecutor: &goexecutor
    image: circleci/golang:1.16

  workdir: &workdir
    working_directory: /home/circleci/signalfx-go-tracing

executors:
  go:
    <<: *workdir
    docker:
      - *goexecutor

  go_cassandra:
    <<: *workdir
    docker:
      - *goexecutor
      - image: cassandra:3.7
        environment:
          MAX_HEAP_SIZE: 256m
          HEAP_NEWSIZE: 64m

  go_elasticsearch:
    <<: *workdir
    docker:
      - *goexecutor
      - image: elasticsearch:2
        environment:
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"  # https://github.com/10up/wp-local-docker/issues/6
      - image: elasticsearch:5
        environment:
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"  # https://github.com/10up/wp-local-docker/issues/6

  go_kafka_zookeeper:
    <<: *workdir
    docker:
      - *goexecutor
      - image: confluentinc/cp-zookeeper:5.0.0
        environment:
          ZOOKEEPER_CLIENT_PORT: "2181"
      - image: confluentinc/cp-kafka:5.0.0
        environment:
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
          KAFKA_CREATE_TOPICS: gotest:1:1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"

  go_memcached:
    <<: *workdir
    docker:
      - *goexecutor
      - image: memcached:1.5.9

  go_mongo:
    <<: *workdir
    docker:
      - *goexecutor
      - image: circleci/mongo:latest-ram

  go_redis:
    <<: *workdir
    docker:
      - *goexecutor
      - image: redis:3.2

  go_sql:
    <<: *workdir
    docker:
      - *goexecutor
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_PASSWORD: test
          MYSQL_USER: test
          MYSQL_DATABASE: test
      - image: circleci/postgres:9.5
        environment:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

commands:

  install_rdkafka:
    description: Install rdkafka
    parameters:
      version:
        description: rdkafka branch, tag, or commit id
        type: string
        default: 0d525ba1252074732aac575f88f04831f2656b8f
      dest:
        description: git clone destination directory
        type: string
        default: /tmp/rdkafka
    steps:
      - restore_cache:
          keys:
            - v1-rdkafka-<< parameters.version >>
      - run:
          name: Install rdkafka
          command: |
            if [ ! -d << parameters.dest >> ] ; then
                echo "building librdkafka"
                git clone -n https://github.com/edenhill/librdkafka.git << parameters.dest >>
                cd << parameters.dest >> && git checkout << parameters.version >> && ./configure && make
            fi
            echo "installing librdkafka"
            cd << parameters.dest >> && sudo make install
            sudo ldconfig
      - save_cache:
          key: v1-rdkafka-<< parameters.version >>
          paths:
            - << parameters.dest >>

  go_get:
    parameters:
      options:
        type: string
        default: -v -t
      packages:
        type: string
        default: ./...
      retries:
        type: integer
        default: 3
    steps:
      - run:
          name: Fetching dependencies
          command: |
            RETRIES=<< parameters.retries >>
            for (( i=0; i<$RETRIES; i++ )); do
                go get << parameters.options >> << parameters.packages >> && exit 0
                sleep 5
            done
            exit 1

  get_deps:
    description: Get project dependencies
    steps:
      - restore_cache:
          keys:
            - v1-gomod-{{ checksum "go.sum" }}-{{ checksum "contrib/google.golang.org/grpc.v12/go.sum" }}
      - run:
          name: Download packages
          command: |
            go mod download
            cd contrib/google.golang.org/grpc.v12; go mod download
            go install github.com/tebeka/go2xunit@v1.4.10
      - install_rdkafka:
          version: 4ffe54b4f59ee5ae3767f9f25dc14651a3384d62
      - save_cache:
          key: v1-gomod-{{ checksum "go.sum" }}-{{ checksum "contrib/google.golang.org/grpc.v12/go.sum" }}
          paths:
            - /go/pkg/

  dockerize_wait:
    description: Wait for docker service to be ready
    parameters:
      address:
        type: string
        default: ""
      timeout:
        type: string
        default: 1m
    steps:
      - run: dockerize -wait << parameters.address >> -timeout << parameters.timeout >>

  save_test_results:
    description: Collect and archive test results from `dir`.
    parameters:
      dir:
        type: string
        default: "~/testresults"
    steps:
      - store_test_results:
          path: << parameters.dir >>
      - store_artifacts:
          path: << parameters.dir >>

jobs:
  go_test:
    description: Run go tests
    parameters:
      executor:
        type: executor
        default: go
      before_deps:
        type: steps
        default: []
      after_deps:
        type: steps
        default: []
      options:
        type: string
        default: -v -race
      module:
        type: string
        default: .
      packages:
        type: string
        default: ./...
      integration:
        type: integer
        default: 1
    executor: << parameters.executor >>
    steps:
      - checkout
      - steps: << parameters.before_deps >>
      - get_deps
      - steps: << parameters.after_deps >>
      - run:
          name: Run go tests
          command: |
            mkdir ~/testresults
            export INTEGRATION=<< parameters.integration >>
            cd << parameters.module >>
            bash -euo pipefail -c "go test << parameters.options >> << parameters.packages >> | tee /dev/stderr | grep -v '\[no test files\]' | go2xunit" > ~/testresults/unit.xml
      - save_test_results

  lint_vet:
    executor: go
    steps:
      - checkout
      - get_deps
      - run:
          name: Run linter
          command: |
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b $(go env GOPATH)/bin v1.24.0
            ALL_MODULES=`find . -type f -name "go.mod" -exec dirname {} \; | sort`
            for dir in ${ALL_MODULES}; do
                echo "golangci-lint in ${dir}"
                cd "${dir}"
                GOGC=40 golangci-lint run --deadline 5m
                cd - >/dev/null
            done            

workflows:
  build_test:
    jobs:
      - lint_vet
      - go_test:
          name: test
      - go_test:
          name: test_aws
          module: ./contrib/aws/aws-sdk-go/aws
      - go_test:
          name: test_memcached
          executor: go_memcached
          module: ./contrib/bradfitz/gomemcache/memcache
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:11211
      - go_test:
          name: test_confluent-kafka-go
          executor: go_kafka_zookeeper
          module: ./contrib/confluentinc/confluent-kafka-go/kafka
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:2181
            - dockerize_wait:
                address: tcp://localhost:9092
      - go_test:
          name: test_sql
          executor: go_sql
          module: ./contrib/database/sql
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:3306
            - dockerize_wait:
                address: tcp://localhost:5432
      - go_test:
          name: test_go-restful
          module: ./contrib/emicklei/go-restful
      - go_test:
          name: test_redigo_old
          executor: go_redis
          module: ./contrib/garyburd/redigo
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:6379
      - go_test:
          name: test_gin
          module: ./contrib/gin-gonic/gin
      - go_test:
          name: test_mongo_globalsign
          executor: go_mongo
          module: ./contrib/globalsign/mgo
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:27017
      - go_test:
          name: test_chi
          module: ./contrib/go-chi/chi
      - go_test:
          name: test_redis
          executor: go_redis
          module: ./contrib/go-redis/redis
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:6379
      # - go_test:
      #    name: test_cassandra
      #    executor: go_cassandra
      #    module: ./contrib/gocql/gocql
      #    after_deps:
      #      - dockerize_wait:
      #          address: tcp://localhost:9042
      #          timeout: 2m
      - go_test:
          name: test_redigo
          executor: go_redis
          module: ./contrib/gomodule/redigo
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:6379
      - go_test:
          name: test_google-api
          module: ./contrib/google.golang.org/api
      - go_test:
          name: test_google-grpc
          module: ./contrib/google.golang.org/grpc
      - go_test:
          name: test_google-grpc.v12
          module: ./contrib/google.golang.org/grpc.v12
      - go_test:
          name: test_gorilla-mux
          module: ./contrib/gorilla/mux
      - go_test:
          name: test_graphql-go
          module: ./contrib/graph-gophers/graphql-go
      - go_test:
          name: test_gorm
          executor: go_sql
          module: ./contrib/jinzhu/gorm
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:3306
            - dockerize_wait:
                address: tcp://localhost:5432
      - go_test:
          name: test_sqlx
          executor: go_sql
          module: ./contrib/jmoiron/sqlx
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:3306
            - dockerize_wait:
                address: tcp://localhost:5432
      - go_test:
          name: test_julienschmidt-httprouter
          module: ./contrib/julienschmidt/httprouter
      - go_test:
          name: test_kubernetes
          module: ./contrib/k8s.io/client-go/kubernetes
      - go_test:
          name: test_echo
          module: ./contrib/labstack/echo
      - go_test:
          name: test_echo.v4
          module: ./contrib/labstack/echo.v4
      - go_test:
          name: test_miekg-dns
          module: ./contrib/miekg/dns
      - go_test:
          name: test_mongo
          executor: go_mongo
          module: ./contrib/mongodb/mongo-go-driver/mongo
          after_deps:
            - dockerize_wait:
                address: tcp://localhost:27017
      - go_test:
          name: test_http
          module: ./contrib/net/http
      - go_test:
          name: test_elasticsearch
          executor: go_elasticsearch
          module: ./contrib/olivere/elastic
          after_deps:
            - dockerize_wait:
                address: http://localhost:9200
            - dockerize_wait:
                address: http://localhost:9201
      - go_test:
          name: test_sarama
          module: ./contrib/Shopify/sarama
      - go_test:
          name: test_leveldb
          module: ./contrib/syndtr/goleveldb/leveldb
      - go_test:
          name: test_buntdb
          module: ./contrib/tidwall/buntdb
